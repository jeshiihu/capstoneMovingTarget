-- Easy_Driver.vhd

-- This file was auto-generated as a prototype implementation of a module
-- created in component editor.  It ties off all outputs to ground and
-- ignores all inputs.  It needs to be edited to make it do something
-- useful.
-- 
-- This file will not be automatically regenerated.  You should check it in
-- to your version control system if you want to keep it.

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity Easy_Driver is
	port (
		clk                : in  std_logic                     := '0';             --               clock.clk
		reset_reset        : in  std_logic                     := '0';             --               reset.reset_n
		conduit_end_dir    : out std_logic;                                        --         conduit_end.dir
		conduit_end_step   : out std_logic;                                        --                    .step
		conduit_end_enable : out std_logic;                                        --                    .enable
		step_read_n        : in  std_logic                     := '0';             --   avalon_slave_step.read_n
		step_readdata      : out std_logic_vector(15 downto 0);                    --                    .readdata
		step_write_n       : in  std_logic                     := '0';             --                    .write_n
		step_writedata     : in  std_logic_vector(15 downto 0) := (others => '0'); --                    .writedata
		dir_read_n         : in  std_logic                     := '0';             --    avalon_slave_dir.read_n
		dir_readdata       : out std_logic_vector(7 downto 0);                     --                    .readdata
		dir_write_n        : in  std_logic                     := '0';             --                    .write_n
		dir_writedata      : in  std_logic_vector(7 downto 0)  := (others => '0'); --                    .writedata
		period_read_n      : in  std_logic                     := '0';             -- avalon_slave_period.read_n
		period_readdata    : out std_logic_vector(31 downto 0);                    --                    .readdata
		period_write_n     : in  std_logic                     := '0';             --                    .write_n
		period_writedata   : in  std_logic_vector(31 downto 0) := (others => '0'); --                    .writedata
		duty_read_n        : in  std_logic                     := '0';             --   avalon_slave_duty.read_n
		duty_readdata      : out std_logic_vector(31 downto 0);                    --                    .readdata
		duty_write_n       : in  std_logic                     := '0';             --                    .write_n
		duty_writedata     : in  std_logic_vector(31 downto 0) := (others => '0')  --                    .writedata
	);
end entity Easy_Driver;

architecture rtl of Easy_Driver is
begin

	-- TODO: Auto-generated HDL template

	conduit_end_enable <= '0';

	conduit_end_step <= '0';

	conduit_end_dir <= '0';

	step_readdata <= "0000000000000000";

	dir_readdata <= "00000000";

	period_readdata <= "00000000000000000000000000000000";

	duty_readdata <= "00000000000000000000000000000000";

end architecture rtl; -- of Easy_Driver
